INICIO E GOAL DINAMICOS:
	1) Desenhar um segmento a x segmentos do carro. A frente e atras e igual [FEITO]
	2) Guardar essa posicao/pointer do segmento. vou precisar pa fazer backtrack

NOTA: Tecnicamente so preciso da posicao do carro q tou mais proximo de ultrapassar. Portanto ate posso desenhar todos estes pontos agora (so por questoes de teste) mas o ponto q preciso mesmo e o do carro mais proximo. o pathfinder encontra isso (falta saber ao certo aonde). Ja tenho os ciclos feitos no dwindow, falta repetir no drive e passar um v3d pro desenho.

	3) Detetar se estamos proximos desse ponto/posicao


//////////////////////////////////////////////////
O OptLoc e calculado logo de inicio e e estatico, nao muda. O Loc e dinamico , cada ponto muda sempre que o carro
esta a LOOKAHEAD distancia desse. 

O carro segue o Loc com alguma margem. Caso a margem de erro nao o permita. 

/////////////////////////////////////

/*
void treeRewire(v3d newPos)
{
	double nbrMinCost = DBL_MAX;
	size_t nbrIndex = -1;
	State *currentState = myrrt->getPool().back();

	for (size_t k = myrrt->getPool().size(); k--;)
	{
		double dist = Dist::eucl(newPos, *myrrt->getAt(k)->getPos());
		if (dist <= NBR_RADIUS && dist > 0.1)
		{
			double edgeCost = myrrt->getAt(k)->getEdgeCost();
			if (edgeCost < nbrMinCost)
			{
				nbrMinCost = edgeCost;
				nbrIndex = k;
			}
		}
	}

	currentState->setParent(myrrt->getAt(nbrIndex));
	vector<State *> children = currentState->getParent()->getChildren();
	if (!children.empty())
	{
		cout << "CURR STATE" << currentState << endl;
		currentState->getParent()->printChildren();
		children.push_back(currentState);
	}
	cout << endl;
}
*/